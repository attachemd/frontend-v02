{"ast":null,"code":"function cov_1k43uxpj9c() {\n  var path = \"C:\\\\Users\\\\Me\\\\Documents\\\\Me\\\\fullstack\\\\frontend-v02\\\\src\\\\app\\\\shared\\\\ui.service.ts\";\n  var hash = \"1b68c38209b8d7ace035db08937756c5421e8076\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\Me\\\\Documents\\\\Me\\\\fullstack\\\\frontend-v02\\\\src\\\\app\\\\shared\\\\ui.service.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 16\n        },\n        end: {\n          line: 18,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 7,\n          column: 8\n        },\n        end: {\n          line: 7,\n          column: 33\n        }\n      },\n      \"2\": {\n        start: {\n          line: 8,\n          column: 8\n        },\n        end: {\n          line: 8,\n          column: 49\n        }\n      },\n      \"3\": {\n        start: {\n          line: 11,\n          column: 8\n        },\n        end: {\n          line: 13,\n          column: 11\n        }\n      },\n      \"4\": {\n        start: {\n          line: 16,\n          column: 8\n        },\n        end: {\n          line: 16,\n          column: 54\n        }\n      },\n      \"5\": {\n        start: {\n          line: 19,\n          column: 0\n        },\n        end: {\n          line: 21,\n          column: 2\n        }\n      },\n      \"6\": {\n        start: {\n          line: 19,\n          column: 33\n        },\n        end: {\n          line: 21,\n          column: 1\n        }\n      },\n      \"7\": {\n        start: {\n          line: 22,\n          column: 0\n        },\n        end: {\n          line: 24,\n          column: 14\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 6,\n            column: 4\n          },\n          end: {\n            line: 6,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 6,\n            column: 26\n          },\n          end: {\n            line: 9,\n            column: 5\n          }\n        },\n        line: 6\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 4\n          },\n          end: {\n            line: 10,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 44\n          },\n          end: {\n            line: 14,\n            column: 5\n          }\n        },\n        line: 10\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 15,\n            column: 4\n          },\n          end: {\n            line: 15,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 15,\n            column: 41\n          },\n          end: {\n            line: 17,\n            column: 5\n          }\n        },\n        line: 15\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 19,\n            column: 27\n          },\n          end: {\n            line: 19,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 19,\n            column: 33\n          },\n          end: {\n            line: 21,\n            column: 1\n          }\n        },\n        line: 19\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    b: {},\n    inputSourceMap: {\n      version: 3,\n      file: \"ui.service.js\",\n      sourceRoot: \"\",\n      sources: [\"C:\\\\Users\\\\Me\\\\Documents\\\\Me\\\\fullstack\\\\frontend-v02\\\\src\\\\app\\\\shared\\\\ui.service.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAC,OAAO,EAAC,MAAM,MAAM,CAAC;AAC7B,OAAO,EAAC,WAAW,EAAC,MAAM,6BAA6B,CAAC;AACxD,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;IAG5B,SAAS,SAAT,SAAS;IAGlB,YAAoB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;QAFzC,wBAAmB,GAAqB,IAAI,OAAO,EAAW,CAAC;IAG/D,CAAC;IAED,YAAY,CACR,OAAe,EACf,MAAwB,EACxB,QAAgB;QAEhB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;YAChC,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAA;IACN,CAAC;IAEM,oBAAoB,CAAC,cAAuB;QAC/C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAClD,CAAC;CACJ,CAAA;;YAvBO,WAAW;;AAIN,SAAS;IADrB,UAAU,EAAE;GACA,SAAS,CAmBrB;SAnBY,SAAS\",\n      sourcesContent: [\"import {Subject} from \\\"rxjs\\\";\\r\\nimport {MatSnackBar} from \\\"@angular/material/snack-bar\\\";\\r\\nimport {Injectable} from \\\"@angular/core\\\";\\r\\n\\r\\n@Injectable()\\r\\nexport class UIService {\\r\\n    loadingStateChange$: Subject<boolean> = new Subject<boolean>();\\r\\n\\r\\n    constructor(private snackBar: MatSnackBar) {\\r\\n    }\\r\\n\\r\\n    showSnackBar(\\r\\n        message: string,\\r\\n        action: string|undefined,\\r\\n        duration: number\\r\\n    ){\\r\\n        this.snackBar.open(message, action, {\\r\\n            duration: duration\\r\\n        })\\r\\n    }\\r\\n\\r\\n    public loadingStateNotifier(isLoadingState: boolean){\\r\\n        this.loadingStateChange$.next(isLoadingState);\\r\\n    }\\r\\n}\\r\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"1b68c38209b8d7ace035db08937756c5421e8076\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1k43uxpj9c = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1k43uxpj9c();\nimport { __decorate } from \"tslib\";\nimport { Subject } from \"rxjs\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Injectable } from \"@angular/core\";\ncov_1k43uxpj9c().s[0]++;\nlet UIService = class UIService {\n  constructor(snackBar) {\n    cov_1k43uxpj9c().f[0]++;\n    cov_1k43uxpj9c().s[1]++;\n    this.snackBar = snackBar;\n    cov_1k43uxpj9c().s[2]++;\n    this.loadingStateChange$ = new Subject();\n  }\n\n  showSnackBar(message, action, duration) {\n    cov_1k43uxpj9c().f[1]++;\n    cov_1k43uxpj9c().s[3]++;\n    this.snackBar.open(message, action, {\n      duration: duration\n    });\n  }\n\n  loadingStateNotifier(isLoadingState) {\n    cov_1k43uxpj9c().f[2]++;\n    cov_1k43uxpj9c().s[4]++;\n    this.loadingStateChange$.next(isLoadingState);\n  }\n\n};\ncov_1k43uxpj9c().s[5]++;\n\nUIService.ctorParameters = () => {\n  cov_1k43uxpj9c().f[3]++;\n  cov_1k43uxpj9c().s[6]++;\n  return [{\n    type: MatSnackBar\n  }];\n};\n\ncov_1k43uxpj9c().s[7]++;\nUIService = __decorate([Injectable()], UIService);\nexport { UIService };","map":{"version":3,"sources":["C:/Users/Me/Documents/Me/fullstack/frontend-v02/src/app/shared/ui.service.ts"],"names":["__decorate","Subject","MatSnackBar","Injectable","UIService","constructor","snackBar","loadingStateChange$","showSnackBar","message","action","duration","open","loadingStateNotifier","isLoadingState","next","ctorParameters","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;;AACA,IAAIC,SAAS,GAAG,MAAMA,SAAN,CAAgB;AAC5BC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAAA;AAAA;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AADkB;AAElB,SAAKC,mBAAL,GAA2B,IAAIN,OAAJ,EAA3B;AACH;;AACDO,EAAAA,YAAY,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AAAA;AAAA;AACpC,SAAKL,QAAL,CAAcM,IAAd,CAAmBH,OAAnB,EAA4BC,MAA5B,EAAoC;AAChCC,MAAAA,QAAQ,EAAEA;AADsB,KAApC;AAGH;;AACDE,EAAAA,oBAAoB,CAACC,cAAD,EAAiB;AAAA;AAAA;AACjC,SAAKP,mBAAL,CAAyBQ,IAAzB,CAA8BD,cAA9B;AACH;;AAZ2B,CAAhC;;;AAcAV,SAAS,CAACY,cAAV,GAA2B,MAAM;AAAA;AAAA;AAAA,UAC7B;AAAEC,IAAAA,IAAI,EAAEf;AAAR,GAD6B;AAEhC,CAFD;;;AAGAE,SAAS,GAAGJ,UAAU,CAAC,CACnBG,UAAU,EADS,CAAD,EAEnBC,SAFmB,CAAtB;AAGA,SAASA,SAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Subject } from \"rxjs\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Injectable } from \"@angular/core\";\r\nlet UIService = class UIService {\r\n    constructor(snackBar) {\r\n        this.snackBar = snackBar;\r\n        this.loadingStateChange$ = new Subject();\r\n    }\r\n    showSnackBar(message, action, duration) {\r\n        this.snackBar.open(message, action, {\r\n            duration: duration\r\n        });\r\n    }\r\n    loadingStateNotifier(isLoadingState) {\r\n        this.loadingStateChange$.next(isLoadingState);\r\n    }\r\n};\r\nUIService.ctorParameters = () => [\r\n    { type: MatSnackBar }\r\n];\r\nUIService = __decorate([\r\n    Injectable()\r\n], UIService);\r\nexport { UIService };\r\n"]},"metadata":{},"sourceType":"module"}