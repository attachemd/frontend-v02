{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Me\\\\Documents\\\\Me\\\\fullstack\\\\frontend-v02\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { TrainingComponent } from './training.component';\nimport { TrainingService } from \"./training.service\";\nimport { Subject } from 'rxjs';\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { By } from \"@angular/platform-browser\";\nimport { NO_ERRORS_SCHEMA } from \"@angular/core\";\nimport { findComponent } from \"../spec-helpers/element.spec-helper\";\nfdescribe('TrainingComponent', () => {\n  let component;\n  let fixture;\n  let trainingServiceSpy = jasmine.createSpyObj(\"TrainingService\", [\"getAvailableExercises\"]);\n  trainingServiceSpy.exerciseChanged$ = new Subject();\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [BrowserAnimationsModule, MatTabsModule],\n      providers: [{\n        provide: TrainingService,\n        useValue: trainingServiceSpy\n      }],\n      declarations: [TrainingComponent // MockComponent(NewTrainingComponent),\n      // MockComponent(PastTrainingComponent),\n      ],\n      schemas: [NO_ERRORS_SCHEMA]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(TrainingComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('create HomeComponent', () => {\n    expect(component).toBeTruthy();\n  }); // it('find NewTrainingComponent', () => {\n  //     let newTraining: NewTrainingComponent;\n  //     const newTrainingEl = fixture.debugElement.query(\n  //         // Original class!\n  //         By.directive(NewTrainingComponent)\n  //     );\n  //     console.log(\"newTrainingEl: \")\n  //     console.log(newTrainingEl)\n  //     newTraining = newTrainingEl.componentInstance;\n  //     expect(newTraining).toBeTruthy();\n  // });\n  //\n  // it('find PastTrainingComponent',\n  //     fakeAsync(() => {\n  //             let pastTraining: PastTrainingComponent;\n  //             const pastTrainingEl = fixture.debugElement.query(\n  //                 // Original class!\n  //                 By.directive(PastTrainingComponent)\n  //             );\n  //             console.log(\"pastTrainingEl: \")\n  //             console.log(pastTrainingEl)\n  //             pastTraining = pastTrainingEl.componentInstance;\n  //             tick()\n  //             fixture.detectChanges();\n  //             expect(pastTraining).toBeTruthy();\n  //         }\n  //     ));\n\n  it('find new training component', () => {\n    const newTraining = findComponent(fixture, 'app-new-training');\n    expect(newTraining).toBeTruthy();\n  }); // it('find past training component', () => {\n  //     const pastTraining = findComponent(fixture, 'app-past-training');\n  //     expect(pastTraining).toBeTruthy();\n  // });\n\n  it('find past training component', /*#__PURE__*/_asyncToGenerator(function* () {\n    // let compiled = fixture.nativeElement;\n    fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1].nativeElement.click();\n    fixture.detectChanges();\n    yield fixture.whenStable().then(() => {\n      // expect(compiled.querySelector('app-past-training')).toBeTruthy();\n      const pastTraining = findComponent(fixture, 'app-past-training');\n      expect(pastTraining).toBeTruthy();\n    });\n  })); // it('should display registration form after clicking second tab',\n  //     fakeAsync(() => {\n  //         let compiled = fixture.nativeElement;\n  //         fixture.debugElement\n  //             .queryAll(By.css('.mat-tab-label'))[1]\n  //             .nativeElement\n  //             .click();\n  //         // compiled.querySelectorAll('mat-tab')[1].click();\n  //         // const matTab = findEl(fixture, 'tab2');\n  //         // console.log(\"matTab: \");\n  //         // console.log(matTab);\n  //         // console.log(\"compiled: \");\n  //         // console.log(compiled);\n  //         tick();\n  //         fixture.detectChanges();\n  //\n  //         expect(compiled.querySelector('app-past-training')).toBeTruthy();\n  //\n  //     })\n  // );\n});","map":{"version":3,"sources":["C:/Users/Me/Documents/Me/fullstack/frontend-v02/src/app/training/training.component.spec.ts"],"names":["TestBed","TrainingComponent","TrainingService","Subject","MatTabsModule","BrowserAnimationsModule","By","NO_ERRORS_SCHEMA","findComponent","fdescribe","component","fixture","trainingServiceSpy","jasmine","createSpyObj","exerciseChanged$","beforeEach","configureTestingModule","imports","providers","provide","useValue","declarations","schemas","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","newTraining","debugElement","queryAll","css","nativeElement","click","whenStable","then","pastTraining"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,uBAAT,QAAwC,sCAAxC;AACA,SAASC,EAAT,QAAmB,2BAAnB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACAC,SAAS,CAAC,mBAAD,EAAsB,MAAM;AACjC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,kBAAkB,GAAGC,OAAO,CAACC,YAAR,CAAqB,iBAArB,EAAwC,CAAC,uBAAD,CAAxC,CAAzB;AACAF,EAAAA,kBAAkB,CAACG,gBAAnB,GAAsC,IAAIZ,OAAJ,EAAtC;AACAa,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMhB,OAAO,CAACiB,sBAAR,CAA+B;AACjCC,MAAAA,OAAO,EAAE,CACLb,uBADK,EAELD,aAFK,CADwB;AAKjCe,MAAAA,SAAS,EAAE,CACP;AACIC,QAAAA,OAAO,EAAElB,eADb;AAEImB,QAAAA,QAAQ,EAAET;AAFd,OADO,CALsB;AAWjCU,MAAAA,YAAY,EAAE,CACVrB,iBADU,CAEV;AACA;AAHU,OAXmB;AAgBjCsB,MAAAA,OAAO,EAAE,CAAChB,gBAAD;AAhBwB,KAA/B,EAkBDiB,iBAlBC,EAAN;AAmBH,GApBS,EAAV;AAqBAR,EAAAA,UAAU,CAAC,MAAM;AACbL,IAAAA,OAAO,GAAGX,OAAO,CAACyB,eAAR,CAAwBxB,iBAAxB,CAAV;AACAS,IAAAA,SAAS,GAAGC,OAAO,CAACe,iBAApB;AACAf,IAAAA,OAAO,CAACgB,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,sBAAD,EAAyB,MAAM;AAC7BC,IAAAA,MAAM,CAACnB,SAAD,CAAN,CAAkBoB,UAAlB;AACH,GAFC,CAAF,CA/BiC,CAkCjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,EAAAA,EAAE,CAAC,6BAAD,EAAgC,MAAM;AACpC,UAAMG,WAAW,GAAGvB,aAAa,CAACG,OAAD,EAAU,kBAAV,CAAjC;AACAkB,IAAAA,MAAM,CAACE,WAAD,CAAN,CAAoBD,UAApB;AACH,GAHC,CAAF,CA7DiC,CAiEjC;AACA;AACA;AACA;;AACAF,EAAAA,EAAE,CAAC,8BAAD,iCAAiC,aAAY;AAC3C;AACAjB,IAAAA,OAAO,CAACqB,YAAR,CACKC,QADL,CACc3B,EAAE,CAAC4B,GAAH,CAAO,gBAAP,CADd,EACwC,CADxC,EAEKC,aAFL,CAGKC,KAHL;AAIAzB,IAAAA,OAAO,CAACgB,aAAR;AACA,UAAMhB,OAAO,CAAC0B,UAAR,GAAqBC,IAArB,CAA0B,MAAM;AAClC;AACA,YAAMC,YAAY,GAAG/B,aAAa,CAACG,OAAD,EAAU,mBAAV,CAAlC;AACAkB,MAAAA,MAAM,CAACU,YAAD,CAAN,CAAqBT,UAArB;AACH,KAJK,CAAN;AAKH,GAZC,EAAF,CArEiC,CAkFjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAtGQ,CAAT","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { TrainingComponent } from './training.component';\r\nimport { TrainingService } from \"./training.service\";\r\nimport { Subject } from 'rxjs';\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { By } from \"@angular/platform-browser\";\r\nimport { NO_ERRORS_SCHEMA } from \"@angular/core\";\r\nimport { findComponent } from \"../spec-helpers/element.spec-helper\";\r\nfdescribe('TrainingComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let trainingServiceSpy = jasmine.createSpyObj(\"TrainingService\", [\"getAvailableExercises\"]);\r\n    trainingServiceSpy.exerciseChanged$ = new Subject();\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            imports: [\r\n                BrowserAnimationsModule,\r\n                MatTabsModule\r\n            ],\r\n            providers: [\r\n                {\r\n                    provide: TrainingService,\r\n                    useValue: trainingServiceSpy\r\n                }\r\n            ],\r\n            declarations: [\r\n                TrainingComponent,\r\n                // MockComponent(NewTrainingComponent),\r\n                // MockComponent(PastTrainingComponent),\r\n            ],\r\n            schemas: [NO_ERRORS_SCHEMA],\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(TrainingComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('create HomeComponent', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    // it('find NewTrainingComponent', () => {\r\n    //     let newTraining: NewTrainingComponent;\r\n    //     const newTrainingEl = fixture.debugElement.query(\r\n    //         // Original class!\r\n    //         By.directive(NewTrainingComponent)\r\n    //     );\r\n    //     console.log(\"newTrainingEl: \")\r\n    //     console.log(newTrainingEl)\r\n    //     newTraining = newTrainingEl.componentInstance;\r\n    //     expect(newTraining).toBeTruthy();\r\n    // });\r\n    //\r\n    // it('find PastTrainingComponent',\r\n    //     fakeAsync(() => {\r\n    //             let pastTraining: PastTrainingComponent;\r\n    //             const pastTrainingEl = fixture.debugElement.query(\r\n    //                 // Original class!\r\n    //                 By.directive(PastTrainingComponent)\r\n    //             );\r\n    //             console.log(\"pastTrainingEl: \")\r\n    //             console.log(pastTrainingEl)\r\n    //             pastTraining = pastTrainingEl.componentInstance;\r\n    //             tick()\r\n    //             fixture.detectChanges();\r\n    //             expect(pastTraining).toBeTruthy();\r\n    //         }\r\n    //     ));\r\n    it('find new training component', () => {\r\n        const newTraining = findComponent(fixture, 'app-new-training');\r\n        expect(newTraining).toBeTruthy();\r\n    });\r\n    // it('find past training component', () => {\r\n    //     const pastTraining = findComponent(fixture, 'app-past-training');\r\n    //     expect(pastTraining).toBeTruthy();\r\n    // });\r\n    it('find past training component', async () => {\r\n        // let compiled = fixture.nativeElement;\r\n        fixture.debugElement\r\n            .queryAll(By.css('.mat-tab-label'))[1]\r\n            .nativeElement\r\n            .click();\r\n        fixture.detectChanges();\r\n        await fixture.whenStable().then(() => {\r\n            // expect(compiled.querySelector('app-past-training')).toBeTruthy();\r\n            const pastTraining = findComponent(fixture, 'app-past-training');\r\n            expect(pastTraining).toBeTruthy();\r\n        });\r\n    });\r\n    // it('should display registration form after clicking second tab',\r\n    //     fakeAsync(() => {\r\n    //         let compiled = fixture.nativeElement;\r\n    //         fixture.debugElement\r\n    //             .queryAll(By.css('.mat-tab-label'))[1]\r\n    //             .nativeElement\r\n    //             .click();\r\n    //         // compiled.querySelectorAll('mat-tab')[1].click();\r\n    //         // const matTab = findEl(fixture, 'tab2');\r\n    //         // console.log(\"matTab: \");\r\n    //         // console.log(matTab);\r\n    //         // console.log(\"compiled: \");\r\n    //         // console.log(compiled);\r\n    //         tick();\r\n    //         fixture.detectChanges();\r\n    //\r\n    //         expect(compiled.querySelector('app-past-training')).toBeTruthy();\r\n    //\r\n    //     })\r\n    // );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}